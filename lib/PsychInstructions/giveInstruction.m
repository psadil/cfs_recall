function [] = giveInstruction(window, keys, responseHandler, constants, expt, expParams)


%%
switch expt
    case 'occularDominance'
        showPromptAndWaitForResp(window, 'This first phase is to get you comfortable wearing the glasses.',...
            keys,constants,responseHandler);
        showPromptAndWaitForResp(window, 'You will see arrows pointing either left or right.',...
            keys,constants,responseHandler);
        showPromptAndWaitForResp(window, ['Use the arrow keys to say which direction you think the arrow faces.\n', ...
            'Please respond as soon as you are sure of the direction.'],...
            keys,constants,responseHandler);
        showPromptAndWaitForResp(window, 'Keep your eyes focused on the white cross in the center.',...
            keys,constants,responseHandler);
        %%
    case {'practice', 'CFSgonogo'}
        
        switch expt
            case 'practice'
                showPromptAndWaitForResp(window, ['You will now have a chance to practice the main experiment.\n',...
                    'There will be a study phase and a test phase.'],...
                    keys,constants,responseHandler);
                showPromptAndWaitForResp(window, 'You will see hidden objects emerge from flashing squares',...
                    keys,constants,responseHandler);
                
            case 'CFSgonogo'
                showPromptAndWaitForResp(window, ['This is the beginning of the main experiment.\n',...
                    'You will see a reminder of the instructions on only this first study-test cycle.'],...
                    keys,constants,responseHandler);
                showPromptAndWaitForResp(window, 'As before, you will see hidden objects emerge from flashing squares.',...
                    keys,constants,responseHandler);
                                
        end
        showPromptAndWaitForResp(window, ['As soon as you are certain that an object is emerging, press the ''j'' key.\n',...
            'Please press the key before you are able to identify the object.'],...
            keys,constants,responseHandler);
        showPromptAndWaitForResp(window, ['After each trial, you will be asked about how well you could see the object.\n',...
            'Respond with the following options.\n\n',...
            'no image detected - 0\n',...
            'possibly saw, couldn''t identify - 1\n',...
            'definitely saw, but unsure what it was (could possibly guess) - 2\n',...
            'definitely saw, could identify - 3\n',...
            '\nWhen objects are emerging, you should wait until you can give a response of 2\n',...
            'but respond before you would give a response of 3.\n', ...
            '\nUse the keypad to indicate your response.\n'],...
            keys,constants,responseHandler);
        showPromptAndWaitForResp(window, ['For some of the objects that appear you will simply be asked to study their details.\n',...
            'For these objects, you will not need to press any key.\n',...
            'However, your memory for the details of these objects will be tested, so study them as best you can.\n',...
            'To help you study, you will see all objects twice.'],...
            keys,constants,responseHandler);
        showPromptAndWaitForResp(window, ['On some trials, there will be no object\n',...
            'If you haven''t seen an objet and think that one won''t appear, press ''f'''],...
            keys,constants,responseHandler);
        showPromptAndWaitForResp(window, 'Finally, always keep your eyes focused on the white cross in the center',...
            keys,constants,responseHandler);
        %%
    case 'TEST'
        
        showPromptAndWaitForResp(window, ['This is the first test of your memory this experiment!\n',...
            'You will have two kinds of tasks.'],...
            keys,constants,responseHandler);
        showPromptAndWaitForResp(window, ['You will first see an object.\n',...
            'However, only a small, circular part of that object will be visible.\n',...
            'Some of these parts will come from objects that you studied, but others will be new.\n',...
            'Your task will be to name the partially hidden object.\n',...
            'Feel free to use your memory of the objects you studied if you think it will help.\n',...
            '\nAn example will be shown on the next slide.'],...
            keys,constants,responseHandler);
        
        showPromptAndWaitForResp(window, ...
            'Type your responses with the keyboard, and press Enter when you have finished typing.',...
            keys,constants,responseHandler);
        
        stims = makeTexs(212, window, 'NAME', 215);
        
        elicitCueName(window, responseHandler, stims.tex, ...
            keys.enter+keys.escape+keys.name+keys.bkspace+keys.space, ...
            constants, ['light switch', '\ENTER']);
        Screen('Close', stims.tex);
        
        showPromptAndWaitForResp(window, 'In that case, the correct answer would have been ''lightswitch''',...
            keys,constants,responseHandler);
        
        showPromptAndWaitForResp(window, ['You will then see visual noise.\n',...
            'An object may emerge from that noise. When an object does, it will be the same one that you would have just tried to name\n',...
            'Your task is simply to press Enter if an object is emerging. If there is no object, just wait.\n',...
            '\nAn Example will be shown on the next slide'],...
            keys,constants,responseHandler);
        showPromptAndWaitForResp(window, 'Press Enter only if you see an object',...
            keys,constants, responseHandler);
        
        noiseTexes = makeNoiseTex(window);
        stims = makeTexs(212, window, 'NOISE',215);
        
        elicitBCFS(window, responseHandler,...
            stims.tex, [1, 1],...
            keys.enter+keys.escape, noiseTexes, expParams,...
            constants, 0, 1, 0, '\ENTER', 'noise', 'left',...
            expParams.nTicks_noise, 'Press Enter only if you see an object');
        Screen('Close', stims.tex);
        
        noiseTexes = struct2array(noiseTexes);
        Screen('Close', noiseTexes);
        
        showPromptAndWaitForResp(window, ['If that had been a real trial, you would have wanted to press Enter.\n',...
            'Only press Enter when you see an object. Otherwise, just wait.'],...
            keys,constants,responseHandler);
        
        showPromptAndWaitForResp(window, 'The first test phase will begin after you press SPACE',...
            keys,constants,responseHandler);
        
end

iti(window, 1);


end